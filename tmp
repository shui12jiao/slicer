[
  {
    {} {coredns-7b98449c4-4kgns coredns-7b98449c4- kube-system  a06760f3-b70a-48ca-80cb-f08622e0d5a3 459 0 2025-03-25 13: 52: 20 +0800 CST <nil> <nil> map[k8s-app:kube-dns pod-template-hash: 7b98449c4
      ] map[] [
        {apps/v1 ReplicaSet coredns-7b98449c4 79342811-22f1-43f0-b82b-dbc78873bab2 0xc000296170 0xc000296171
        }
      ] [] [
        {k3s Update v1 2025-03-25 13: 52: 20 +0800 CST FieldsV1 {
            "f:metadata": {
              "f:generateName": {},
              "f:labels": {
                ".": {},
                "f:k8s-app": {},
                "f:pod-template-hash": {}
              },
              "f:ownerReferences": {
                ".": {},
                "k:{\"uid\":\"79342811-22f1-43f0-b82b-dbc78873bab2\"}": {}
              }
            },
            "f:spec": {
              "f:containers": {
                "k:{\"name\":\"coredns\"}": {
                  ".": {},
                  "f:args": {},
                  "f:image": {},
                  "f:imagePullPolicy": {},
                  "f:livenessProbe": {
                    ".": {},
                    "f:failureThreshold": {},
                    "f:httpGet": {
                      ".": {},
                      "f:path": {},
                      "f:port": {},
                      "f:scheme": {}
                    },
                    "f:initialDelaySeconds": {},
                    "f:periodSeconds": {},
                    "f:successThreshold": {},
                    "f:timeoutSeconds": {}
                  },
                  "f:name": {},
                  "f:ports": {
                    ".": {},
                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                      ".": {},
                      "f:containerPort": {},
                      "f:name": {},
                      "f:protocol": {}
                    },
                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                      ".": {},
                      "f:containerPort": {},
                      "f:name": {},
                      "f:protocol": {}
                    },
                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                      ".": {},
                      "f:containerPort": {},
                      "f:name": {},
                      "f:protocol": {}
                    }
                  },
                  "f:readinessProbe": {
                    ".": {},
                    "f:failureThreshold": {},
                    "f:httpGet": {
                      ".": {},
                      "f:path": {},
                      "f:port": {},
                      "f:scheme": {}
                    },
                    "f:periodSeconds": {},
                    "f:successThreshold": {},
                    "f:timeoutSeconds": {}
                  },
                  "f:resources": {
                    ".": {},
                    "f:limits": {
                      ".": {},
                      "f:memory": {}
                    },
                    "f:requests": {
                      ".": {},
                      "f:cpu": {},
                      "f:memory": {}
                    }
                  },
                  "f:securityContext": {
                    ".": {},
                    "f:allowPrivilegeEscalation": {},
                    "f:capabilities": {
                      ".": {},
                      "f:add": {},
                      "f:drop": {}
                    },
                    "f:readOnlyRootFilesystem": {}
                  },
                  "f:terminationMessagePath": {},
                  "f:terminationMessagePolicy": {},
                  "f:volumeMounts": {
                    ".": {},
                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                      ".": {},
                      "f:mountPath": {},
                      "f:name": {},
                      "f:readOnly": {}
                    },
                    "k:{\"mountPath\":\"/etc/coredns/custom\"}": {
                      ".": {},
                      "f:mountPath": {},
                      "f:name": {},
                      "f:readOnly": {}
                    }
                  }
                }
              },
              "f:dnsPolicy": {},
              "f:enableServiceLinks": {},
              "f:nodeSelector": {},
              "f:priorityClassName": {},
              "f:restartPolicy": {},
              "f:schedulerName": {},
              "f:securityContext": {},
              "f:serviceAccount": {},
              "f:serviceAccountName": {},
              "f:terminationGracePeriodSeconds": {},
              "f:tolerations": {},
              "f:topologySpreadConstraints": {
                ".": {},
                "k:{\"topologyKey\":\"kubernetes.io/hostname\",\"whenUnsatisfiable\":\"DoNotSchedule\"}": {
                  ".": {},
                  "f:labelSelector": {},
                  "f:maxSkew": {},
                  "f:topologyKey": {},
                  "f:whenUnsatisfiable": {}
                }
              },
              "f:volumes": {
                ".": {},
                "k:{\"name\":\"config-volume\"}": {
                  ".": {},
                  "f:configMap": {
                    ".": {},
                    "f:defaultMode": {},
                    "f:items": {},
                    "f:name": {}
                  },
                  "f:name": {}
                },
                "k:{\"name\":\"custom-config-volume\"}": {
                  ".": {},
                  "f:configMap": {
                    ".": {},
                    "f:defaultMode": {},
                    "f:name": {},
                    "f:optional": {}
                  },
                  "f:name": {}
                }
              }
            }
          }
        } {k3s Update v1 2025-03-25 13: 52: 20 +0800 CST FieldsV1 {
            "f:status": {
              "f:conditions": {
                ".": {},
                "k:{\"type\":\"PodScheduled\"}": {
                  ".": {},
                  "f:lastProbeTime": {},
                  "f:lastTransitionTime": {},
                  "f:message": {},
                  "f:reason": {},
                  "f:status": {},
                  "f:type": {}
                }
              }
            }
          } status
        }
      ]
    } {
      [
        {config-volume {nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil &ConfigMapVolumeSource{LocalObjectReference:LocalObjectReference{Name:coredns,
              },Items: []KeyToPath{KeyToPath{Key:Corefile,Path:Corefile,Mode:nil,
                },KeyToPath{Key:NodeHosts,Path:NodeHosts,Mode:nil,
                },
              },DefaultMode:*420,Optional:nil,
            } nil nil nil nil nil nil nil nil nil nil nil
          }
        } {custom-config-volume {nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil &ConfigMapVolumeSource{LocalObjectReference:LocalObjectReference{Name:coredns-custom,
              },Items: []KeyToPath{},DefaultMode:*420,Optional:*true,
            } nil nil nil nil nil nil nil nil nil nil nil
          }
        } {kube-api-access-6zz9h {nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil &ProjectedVolumeSource{Sources: []VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience: ,ExpirationSeconds:*3607,Path:token,
                  },ClusterTrustBundle:nil,
                },VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,
                    },Items: []KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,
                      },
                    },Optional:nil,
                  },ServiceAccountToken:nil,ClusterTrustBundle:nil,
                },VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items: []DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,
                        },ResourceFieldRef:nil,Mode:nil,
                      },
                    },
                  },ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,
                },
              },DefaultMode:*420,
            } nil nil nil nil nil nil
          }
        }
      ] [] [
        {coredns rancher/mirrored-coredns-coredns: 1.11.3 [] [-conf /etc/coredns/Corefile
          ]  [
            {dns 0 53 UDP
            } {dns-tcp 0 53 TCP
            } {metrics 0 9153 TCP
            }
          ] [] [] {map[memory: {
                {
                  178257920 0
                } {<nil>
                } 170Mi BinarySI
              }
            ] map[cpu: {
                {
                  100 -3
                } {<nil>
                } 100m DecimalSI
              } memory: {
                {
                  73400320 0
                } {<nil>
                } 70Mi BinarySI
              }
            ] []
          } [] <nil> [
            {config-volume true <nil> /etc/coredns  <nil>
            } {custom-config-volume true <nil> /etc/coredns/custom  <nil>
            } {kube-api-access-6zz9h true <nil> /var/run/secrets/kubernetes.io/serviceaccount  <nil>
            }
          ] [] &Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/health,Port: {
                  0 8080
                },Host: ,Scheme:HTTP,HTTPHeaders: []HTTPHeader{},
              },TCPSocket:nil,GRPC:nil,
            },InitialDelaySeconds: 60,TimeoutSeconds: 1,PeriodSeconds: 10,SuccessThreshold: 1,FailureThreshold: 3,TerminationGracePeriodSeconds:nil,
          } &Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/ready,Port: {
                  0 8181
                },Host: ,Scheme:HTTP,HTTPHeaders: []HTTPHeader{},
              },TCPSocket:nil,GRPC:nil,
            },InitialDelaySeconds: 0,TimeoutSeconds: 1,PeriodSeconds: 2,SuccessThreshold: 1,FailureThreshold: 3,TerminationGracePeriodSeconds:nil,
          } nil nil /dev/termination-log File IfNotPresent &SecurityContext{Capabilities:&Capabilities{Add: [NET_BIND_SERVICE
              ],Drop: [all
              ],
            },Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:*true,AllowPrivilegeEscalation:*false,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,
          } false false false
        }
      ] [] Always 0xc0000125d0 <nil> Default map[kubernetes.io/os:linux
      ] coredns coredns <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups: [],FSGroup:nil,RunAsGroup:nil,Sysctls: []Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,
      } []   nil default-scheduler [
        {CriticalAddonsOnly Exists   <nil>
        } {node-role.kubernetes.io/control-plane Exists  NoSchedule <nil>
        } {node-role.kubernetes.io/master Exists  NoSchedule <nil>
        } {node.kubernetes.io/not-ready Exists  NoExecute 0xc0000128a0
        } {node.kubernetes.io/unreachable Exists  NoExecute 0xc0000128c0
        }
      ] [] system-cluster-critical 0xc0000128c8 nil [] <nil> 0xc0000128cc 0xc00005a030 map[] [
        {
          1 kubernetes.io/hostname DoNotSchedule &LabelSelector{MatchLabels:map[string
            ]string{k8s-app: kube-dns,
            },MatchExpressions: []LabelSelectorRequirement{},
          } <nil> <nil> <nil> []
        }
      ] <nil> nil <nil> [] [] nil
    } {Pending [
        {PodScheduled False 0001-01-01 00: 00: 00 +0000 UTC 2025-03-25 13: 52: 20 +0800 CST Unschedulable 0/3 nodes are available: 3 node(s) had untolerated taint {node.kubernetes.io/not-ready:
          }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.
        }
      ]     []  [] <nil> [] [] Burstable []  []
    }
  } {
    {} {local-path-provisioner-595dcfc56f-rrm9s local-path-provisioner-595dcfc56f- kube-system  f5726b6f-2ba9-466f-befa-dc36db86d31e 466 0 2025-03-25 13: 52: 20 +0800 CST <nil> <nil> map[app:local-path-provisioner pod-template-hash: 595dcfc56f
      ] map[] [
        {apps/v1 ReplicaSet local-path-provisioner-595dcfc56f d3cc0b31-c437-4df3-bb6e-51621cf6b749 0xc000012967 0xc000012968
        }
      ] [] [
        {k3s Update v1 2025-03-25 13: 52: 20 +0800 CST FieldsV1 {
            "f:metadata": {
              "f:generateName": {},
              "f:labels": {
                ".": {},
                "f:app": {},
                "f:pod-template-hash": {}
              },
              "f:ownerReferences": {
                ".": {},
                "k:{\"uid\":\"d3cc0b31-c437-4df3-bb6e-51621cf6b749\"}": {}
              }
            },
            "f:spec": {
              "f:containers": {
                "k:{\"name\":\"local-path-provisioner\"}": {
                  ".": {},
                  "f:command": {},
                  "f:env": {
                    ".": {},
                    "k:{\"name\":\"POD_NAMESPACE\"}": {
                      ".": {},
                      "f:name": {},
                      "f:valueFrom": {
                        ".": {},
                        "f:fieldRef": {}
                      }
                    }
                  },
                  "f:image": {},
                  "f:imagePullPolicy": {},
                  "f:name": {},
                  "f:resources": {},
                  "f:terminationMessagePath": {},
                  "f:terminationMessagePolicy": {},
                  "f:volumeMounts": {
                    ".": {},
                    "k:{\"mountPath\":\"/etc/config/\"}": {
                      ".": {},
                      "f:mountPath": {},
                      "f:name": {}
                    }
                  }
                }
              },
              "f:dnsPolicy": {},
              "f:enableServiceLinks": {},
              "f:priorityClassName": {},
              "f:restartPolicy": {},
              "f:schedulerName": {},
              "f:securityContext": {},
              "f:serviceAccount": {},
              "f:serviceAccountName": {},
              "f:terminationGracePeriodSeconds": {},
              "f:tolerations": {},
              "f:volumes": {
                ".": {},
                "k:{\"name\":\"config-volume\"}": {
                  ".": {},
                  "f:configMap": {
                    ".": {},
                    "f:defaultMode": {},
                    "f:name": {}
                  },
                  "f:name": {}
                }
              }
            }
          }
        } {k3s Update v1 2025-03-25 13: 52: 20 +0800 CST FieldsV1 {
            "f:status": {
              "f:conditions": {
                ".": {},
                "k:{\"type\":\"PodScheduled\"}": {
                  ".": {},
                  "f:lastProbeTime": {},
                  "f:lastTransitionTime": {},
                  "f:message": {},
                  "f:reason": {},
                  "f:status": {},
                  "f:type": {}
                }
              }
            }
          } status
        }
      ]
    } {
      [
        {config-volume {nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil &ConfigMapVolumeSource{LocalObjectReference:LocalObjectReference{Name:local-path-config,
              },Items: []KeyToPath{},DefaultMode:*420,Optional:nil,
            } nil nil nil nil nil nil nil nil nil nil nil
          }
        } {kube-api-access-znztj {nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil &ProjectedVolumeSource{Sources: []VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience: ,ExpirationSeconds:*3607,Path:token,
                  },ClusterTrustBundle:nil,
                },VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,
                    },Items: []KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,
                      },
                    },Optional:nil,
                  },ServiceAccountToken:nil,ClusterTrustBundle:nil,
                },VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items: []DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,
                        },ResourceFieldRef:nil,Mode:nil,
                      },
                    },
                  },ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,
                },
              },DefaultMode:*420,
            } nil nil nil nil nil nil
          }
        }
      ] [] [
        {local-path-provisioner rancher/local-path-provisioner:v0.0.30 [local-path-provisioner start --config /etc/config/config.json
          ] []  [] [] [
            {POD_NAMESPACE  &EnvVarSource{FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,
                },ResourceFieldRef:nil,ConfigMapKeyRef:nil,SecretKeyRef:nil,
              }
            }
          ] {map[] map[] []
          } [] <nil> [
            {config-volume false <nil> /etc/config/  <nil>
            } {kube-api-access-znztj true <nil> /var/run/secrets/kubernetes.io/serviceaccount  <nil>
            }
          ] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false
        }
      ] [] Always 0xc000624148 <nil> ClusterFirst map[] local-path-provisioner-service-account local-path-provisioner-service-account <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups: [],FSGroup:nil,RunAsGroup:nil,Sysctls: []Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,
      } []   nil default-scheduler [
        {CriticalAddonsOnly Exists   <nil>
        } {node-role.kubernetes.io/control-plane Exists  NoSchedule <nil>
        } {node-role.kubernetes.io/master Exists  NoSchedule <nil>
        } {node.kubernetes.io/not-ready Exists  NoExecute 0xc0006241a0
        } {node.kubernetes.io/unreachable Exists  NoExecute 0xc0006241d0
        }
      ] [] system-node-critical 0xc0006241d8 nil [] <nil> 0xc0006241dc 0xc000628060 map[] [] <nil> nil <nil> [] [] nil
    } {Pending [
        {PodScheduled False 0001-01-01 00: 00: 00 +0000 UTC 2025-03-25 13: 52: 20 +0800 CST Unschedulable 0/3 nodes are available: 3 node(s) had untolerated taint {node.kubernetes.io/not-ready:
          }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.
        }
      ]     []  [] <nil> [] [] BestEffort []  []
    }
  } {
    {} {metrics-server-cdcc87586-4nc96 metrics-server-cdcc87586- kube-system  3fe160e8-cc08-4ab2-be7a-1f75c0c809ab 463 0 2025-03-25 13: 52: 20 +0800 CST <nil> <nil> map[k8s-app:metrics-server pod-template-hash:cdcc87586
      ] map[] [
        {apps/v1 ReplicaSet metrics-server-cdcc87586 bf21ee13-82a5-42c8-9ca7-b358b1677e69 0xc000624277 0xc000624278
        }
      ] [] [
        {k3s Update v1 2025-03-25 13: 52: 20 +0800 CST FieldsV1 {
            "f:metadata": {
              "f:generateName": {},
              "f:labels": {
                ".": {},
                "f:k8s-app": {},
                "f:pod-template-hash": {}
              },
              "f:ownerReferences": {
                ".": {},
                "k:{\"uid\":\"bf21ee13-82a5-42c8-9ca7-b358b1677e69\"}": {}
              }
            },
            "f:spec": {
              "f:containers": {
                "k:{\"name\":\"metrics-server\"}": {
                  ".": {},
                  "f:args": {},
                  "f:image": {},
                  "f:imagePullPolicy": {},
                  "f:livenessProbe": {
                    ".": {},
                    "f:failureThreshold": {},
                    "f:httpGet": {
                      ".": {},
                      "f:path": {},
                      "f:port": {},
                      "f:scheme": {}
                    },
                    "f:initialDelaySeconds": {},
                    "f:periodSeconds": {},
                    "f:successThreshold": {},
                    "f:timeoutSeconds": {}
                  },
                  "f:name": {},
                  "f:ports": {
                    ".": {},
                    "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                      ".": {},
                      "f:containerPort": {},
                      "f:name": {},
                      "f:protocol": {}
                    }
                  },
                  "f:readinessProbe": {
                    ".": {},
                    "f:failureThreshold": {},
                    "f:httpGet": {
                      ".": {},
                      "f:path": {},
                      "f:port": {},
                      "f:scheme": {}
                    },
                    "f:periodSeconds": {},
                    "f:successThreshold": {},
                    "f:timeoutSeconds": {}
                  },
                  "f:resources": {
                    ".": {},
                    "f:requests": {
                      ".": {},
                      "f:cpu": {},
                      "f:memory": {}
                    }
                  },
                  "f:securityContext": {
                    ".": {},
                    "f:allowPrivilegeEscalation": {},
                    "f:readOnlyRootFilesystem": {},
                    "f:runAsNonRoot": {},
                    "f:runAsUser": {}
                  },
                  "f:terminationMessagePath": {},
                  "f:terminationMessagePolicy": {},
                  "f:volumeMounts": {
                    ".": {},
                    "k:{\"mountPath\":\"/tmp\"}": {
                      ".": {},
                      "f:mountPath": {},
                      "f:name": {}
                    }
                  }
                }
              },
              "f:dnsPolicy": {},
              "f:enableServiceLinks": {},
              "f:priorityClassName": {},
              "f:restartPolicy": {},
              "f:schedulerName": {},
              "f:securityContext": {},
              "f:serviceAccount": {},
              "f:serviceAccountName": {},
              "f:terminationGracePeriodSeconds": {},
              "f:tolerations": {},
              "f:volumes": {
                ".": {},
                "k:{\"name\":\"tmp-dir\"}": {
                  ".": {},
                  "f:emptyDir": {},
                  "f:name": {}
                }
              }
            }
          }
        } {k3s Update v1 2025-03-25 13: 52: 20 +0800 CST FieldsV1 {
            "f:status": {
              "f:conditions": {
                ".": {},
                "k:{\"type\":\"PodScheduled\"}": {
                  ".": {},
                  "f:lastProbeTime": {},
                  "f:lastTransitionTime": {},
                  "f:message": {},
                  "f:reason": {},
                  "f:status": {},
                  "f:type": {}
                }
              }
            }
          } status
        }
      ]
    } {
      [
        {tmp-dir {nil &EmptyDirVolumeSource{Medium: ,SizeLimit:<nil>,
            } nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
          }
        } {kube-api-access-sv6hp {nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil &ProjectedVolumeSource{Sources: []VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience: ,ExpirationSeconds:*3607,Path:token,
                  },ClusterTrustBundle:nil,
                },VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,
                    },Items: []KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,
                      },
                    },Optional:nil,
                  },ServiceAccountToken:nil,ClusterTrustBundle:nil,
                },VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items: []DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,
                        },ResourceFieldRef:nil,Mode:nil,
                      },
                    },
                  },ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,
                },
              },DefaultMode:*420,
            } nil nil nil nil nil nil
          }
        }
      ] [] [
        {metrics-server rancher/mirrored-metrics-server:v0.7.2 [] [--cert-dir=/tmp --secure-port=10250 --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --kubelet-use-node-status-port --metric-resolution=15s --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
          ]  [
            {https 0 10250 TCP
            }
          ] [] [] {map[] map[cpu: {
                {
                  100 -3
                } {<nil>
                } 100m DecimalSI
              } memory: {
                {
                  73400320 0
                } {<nil>
                } 70Mi BinarySI
              }
            ] []
          } [] <nil> [
            {tmp-dir false <nil> /tmp  <nil>
            } {kube-api-access-sv6hp true <nil> /var/run/secrets/kubernetes.io/serviceaccount  <nil>
            }
          ] [] &Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/livez,Port: {
                  1 0 https
                },Host: ,Scheme:HTTPS,HTTPHeaders: []HTTPHeader{},
              },TCPSocket:nil,GRPC:nil,
            },InitialDelaySeconds: 60,TimeoutSeconds: 1,PeriodSeconds: 10,SuccessThreshold: 1,FailureThreshold: 3,TerminationGracePeriodSeconds:nil,
          } &Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/readyz,Port: {
                  1 0 https
                },Host: ,Scheme:HTTPS,HTTPHeaders: []HTTPHeader{},
              },TCPSocket:nil,GRPC:nil,
            },InitialDelaySeconds: 0,TimeoutSeconds: 1,PeriodSeconds: 2,SuccessThreshold: 1,FailureThreshold: 3,TerminationGracePeriodSeconds:nil,
          } nil nil /dev/termination-log File IfNotPresent &SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:*1000,RunAsNonRoot:*true,ReadOnlyRootFilesystem:*true,AllowPrivilegeEscalation:*false,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,
          } false false false
        }
      ] [] Always 0xc000624420 <nil> ClusterFirst map[] metrics-server metrics-server <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups: [],FSGroup:nil,RunAsGroup:nil,Sysctls: []Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,
      } []   nil default-scheduler [
        {CriticalAddonsOnly Exists   <nil>
        } {node-role.kubernetes.io/control-plane Exists  NoSchedule <nil>
        } {node-role.kubernetes.io/master Exists  NoSchedule <nil>
        } {node.kubernetes.io/not-ready Exists  NoExecute 0xc000624490
        } {node.kubernetes.io/unreachable Exists  NoExecute 0xc0006244b0
        }
      ] [] system-node-critical 0xc0006244b8 nil [] <nil> 0xc0006244bc 0xc000628080 map[] [] <nil> nil <nil> [] [] nil
    } {Pending [
        {PodScheduled False 0001-01-01 00: 00: 00 +0000 UTC 2025-03-25 13: 52: 20 +0800 CST Unschedulable 0/3 nodes are available: 3 node(s) had untolerated taint {node.kubernetes.io/not-ready:
          }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.
        }
      ]     []  [] <nil> [] [] Burstable []  []
    }
  }
]
PASS



````````````````````
{
  "apiVersion": "v1",
  "items": [
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "k8s.v1.cni.cncf.io/networks": '[
            {
              "name": "n4network",
              "interface": "n4",
              "ips": [
                "10.10.4.2"
              ]
            },
            {
              "name": "n3network",
              "interface": "n3",
              "ips": [
                "10.10.3.2"
              ]
            }
          ]',
        },
        "creationTimestamp": "2025-03-25T05:56:22Z",
        "generateName": "open5gs-smf1-000001-67cf5ccccd-",
        "labels": {
          "app": "open5gs",
          "name": "smf1-000001",
          "nf": "smf",
          "pod-template-hash": "67cf5ccccd",
        },
        "name": "open5gs-smf1-000001-67cf5ccccd-rzvl6",
        "namespace": "open5gs",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "ReplicaSet",
            "name": "open5gs-smf1-000001-67cf5ccccd",
            "uid": "e4710bf7-5617-4cbc-8316-f30e66d5bc61",
          },
        ],
        "resourceVersion": "607",
        "uid": "d7bf51de-6ccb-47c6-b888-9e6804fdd77b",
      },
      "spec": {
        "containers": [
          {
            "args": [
              "-c",
              "/open5gs/config/smfcfg.yaml"
            ],
            "command": [
              "./open5gs-smfd"
            ],
            "env": [
              {
                "name": "GIN_MODE",
                "value": "release"
              }
            ],
            "image": "docker.io/shui12jiao/open5gs:v2.7.2",
            "imagePullPolicy": "Always",
            "name": "smf",
            "ports": [
              {
                "containerPort": 80,
                "name": "nsmf",
                "protocol": "TCP",
              },
              {
                "containerPort": 8805,
                "name": "pfcp",
                "protocol": "UDP",
              },
            ],
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "200m",
                "memory": "256Mi"
              },
            },
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN"
                ]
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/open5gs/config/",
                "name": "smf-volume"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-4z9qf",
                "readOnly": true,
              },
            ],
          },
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "initContainers": [
          {
            "command": [
              "sh",
              "-c",
              "until nc -z $DEPENDENCIES; do echo waiting for the AUSF; sleep 2; done;",
            ],
            "env": [
              {
                "name": "DEPENDENCIES",
                "value": "ausf-nausf:80"
              }
            ],
            "image": "busybox:1.32.0",
            "imagePullPolicy": "IfNotPresent",
            "name": "wait-ausf",
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-4z9qf",
                "readOnly": true,
              },
            ],
          },
        ],
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {},
        "serviceAccount": "default",
        "serviceAccountName": "default",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300,
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300,
          },
        ],
        "volumes": [
          {
            "name": "smf-volume",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "configMap": {
                    "items": [
                      {
                        "key": "smfcfg.yaml",
                        "path": "smfcfg.yaml",
                      },
                    ],
                    "name": "smf1-000001-configmap",
                  },
                },
              ],
            },
          },
          {
            "name": "kube-api-access-4z9qf",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  },
                },
                {
                  "configMap": {
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ],
                    "name": "kube-root-ca.crt",
                  },
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace",
                        },
                        "path": "namespace",
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
      "status": {
        "conditions": [
          {
            "lastProbeTime": null,
            "lastTransitionTime": "2025-03-25T05:56:22Z",
            "message": "0/3 nodes are available: 3 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
            "reason": "Unschedulable",
            "status": "False",
            "type": "PodScheduled",
          },
        ],
        "phase": "Pending",
        "qosClass": "Burstable",
      },
    },
    {
      "apiVersion": "v1",
      "kind": "Pod",
      "metadata": {
        "annotations": {
          "k8s.v1.cni.cncf.io/networks": '[
            {
              "name": "n3network",
              "interface": "n3",
              "ips": [
                "10.10.4.1"
              ]
            },
            {
              "name": "n4network",
              "interface": "n4",
              "ips": [
                "10.10.3.1"
              ]
            }
          ]',
        },
        "creationTimestamp": "2025-03-25T05:56:22Z",
        "generateName": "open5gs-upf1-000001-7f6b8444f-",
        "labels": {
          "app": "open5gs",
          "name": "upf1-000001",
          "nf": "upf",
          "pod-template-hash": "7f6b8444f",
        },
        "name": "open5gs-upf1-000001-7f6b8444f-grp98",
        "namespace": "open5gs",
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "blockOwnerDeletion": true,
            "controller": true,
            "kind": "ReplicaSet",
            "name": "open5gs-upf1-000001-7f6b8444f",
            "uid": "6ffdf56d-8e1d-4c63-86d5-566d7cb37f2f",
          },
        ],
        "resourceVersion": "620",
        "uid": "5c617bb6-7408-4426-a841-a3c9e564e936",
      },
      "spec": {
        "containers": [
          {
            "command": [
              "/open5gs/config/wrapper.sh"
            ],
            "image": "docker.io/shui12jiao/open5gs:v2.7.2",
            "imagePullPolicy": "Always",
            "name": "upf",
            "ports": [
              {
                "containerPort": 8805,
                "name": "n4",
                "protocol": "UDP",
              },
            ],
            "resources": {
              "limits": {
                "cpu": "500m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "200m",
                "memory": "256Mi"
              },
            },
            "securityContext": {
              "privileged": true
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/open5gs/config/",
                "name": "upf-volume"
              },
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-b8sqt",
                "readOnly": true,
              },
            ],
          },
        ],
        "dnsPolicy": "ClusterFirst",
        "enableServiceLinks": true,
        "initContainers": [
          {
            "command": [
              "sh",
              "-c",
              "until nc -z $DEPENDENCIES; do echo waiting for the SMF; sleep 2; done;",
            ],
            "env": [
              {
                "name": "DEPENDENCIES",
                "value": "smf1-000001-nsmf:80",
              },
            ],
            "image": "busybox:1.32.0",
            "imagePullPolicy": "IfNotPresent",
            "name": "wait-smf",
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "volumeMounts": [
              {
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "name": "kube-api-access-b8sqt",
                "readOnly": true,
              },
            ],
          },
        ],
        "preemptionPolicy": "PreemptLowerPriority",
        "priority": 0,
        "restartPolicy": "Always",
        "schedulerName": "default-scheduler",
        "securityContext": {},
        "serviceAccount": "default",
        "serviceAccountName": "default",
        "terminationGracePeriodSeconds": 30,
        "tolerations": [
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "tolerationSeconds": 300,
          },
          {
            "effect": "NoExecute",
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "tolerationSeconds": 300,
          },
        ],
        "volumes": [
          {
            "configMap": {
              "defaultMode": 420,
              "items": [
                {
                  "key": "upfcfg.yaml",
                  "path": "upfcfg.yaml"
                },
                {
                  "key": "wrapper.sh",
                  "mode": 511,
                  "path": "wrapper.sh",
                },
              ],
              "name": "upf1-000001-configmap",
            },
            "name": "upf-volume",
          },
          {
            "name": "kube-api-access-b8sqt",
            "projected": {
              "defaultMode": 420,
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  },
                },
                {
                  "configMap": {
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ],
                    "name": "kube-root-ca.crt",
                  },
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace",
                        },
                        "path": "namespace",
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
      "status": {
        "conditions": [
          {
            "lastProbeTime": null,
            "lastTransitionTime": "2025-03-25T05:56:22Z",
            "message": "0/3 nodes are available: 3 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.",
            "reason": "Unschedulable",
            "status": "False",
            "type": "PodScheduled",
          },
        ],
        "phase": "Pending",
        "qosClass": "Burstable",
      },
    },
  ],
  "kind": "List",
  "metadata": {
    "resourceVersion": ""
  },
}