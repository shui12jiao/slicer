basePath: /
definitions:
  model.AMBR:
    properties:
      downlink:
        $ref: '#/definitions/model.BitRate'
      uplink:
        $ref: '#/definitions/model.BitRate'
    type: object
  model.ARP:
    properties:
      pre_emption_capability:
        type: integer
      pre_emption_vulnerability:
        type: integer
      priority_level:
        type: integer
    type: object
  model.BandwidthSpec:
    properties:
      egress:
        description: 例如 "200Mbps"
        type: string
      ingress:
        description: 例如 "100Mbps"
        type: string
    type: object
  model.BitRate:
    properties:
      unit:
        type: integer
      value:
        type: integer
    type: object
  model.Duration:
    properties:
      end_time:
        type: string
      start_time:
        type: string
    type: object
  model.Flow:
    properties:
      description:
        type: string
      direction:
        type: integer
    type: object
  model.GBR:
    properties:
      downlink:
        $ref: '#/definitions/model.BitRate'
      uplink:
        $ref: '#/definitions/model.BitRate'
    type: object
  model.KPI:
    properties:
      kpi_description:
        type: string
      kpi_name:
        type: string
      sub_counter:
        $ref: '#/definitions/model.SubCounter'
      units:
        type: string
    type: object
  model.MBR:
    properties:
      downlink:
        $ref: '#/definitions/model.BitRate'
      uplink:
        $ref: '#/definitions/model.BitRate'
    type: object
  model.Monitor:
    properties:
      api_version:
        description: 通用
        type: string
      duration:
        $ref: '#/definitions/model.Duration'
      id:
        type: string
      kpi:
        allOf:
        - $ref: '#/definitions/model.KPI'
        description: 核心内容
      monitoring_interval:
        $ref: '#/definitions/model.MonitoringInterval'
      request_description:
        type: string
      request_id:
        description: 用于request translator
        type: string
      scope:
        $ref: '#/definitions/model.Scope'
    type: object
  model.MonitoringInterval:
    properties:
      adaptive:
        type: boolean
      interval_seconds:
        type: integer
    type: object
  model.PCCRule:
    properties:
      flow:
        items:
          $ref: '#/definitions/model.Flow'
        type: array
      qos:
        $ref: '#/definitions/model.QoS'
    type: object
  model.Play:
    type: object
  model.QoS:
    properties:
      arp:
        $ref: '#/definitions/model.ARP'
      gbr:
        $ref: '#/definitions/model.GBR'
      index:
        type: integer
      mbr:
        $ref: '#/definitions/model.MBR'
    type: object
  model.ResourceSpec:
    properties:
      cpu_limit:
        description: '"1"'
        type: string
      cpu_request:
        description: '"500m"'
        type: string
      memory_limit:
        description: '"1Gi"'
        type: string
      memory_request:
        description: '"512Mi"'
        type: string
    type: object
  model.SLA:
    properties:
      availability:
        description: 可用性
        type: number
      down_bandwidth:
        description: 下行带宽
        type: number
      id:
        type: string
      latency:
        description: 延迟
        type: number
      slice_id:
        type: string
      up_bandwidth:
        description: 上行带宽
        type: number
    type: object
  model.SchedulingSpec:
    properties:
      node_name:
        description: 若指定，Pod 将直接运行在此节点
        type: string
      node_selector:
        additionalProperties:
          type: string
        description: 节点标签选择器
        type: object
      scheduler_name:
        description: 自定义调度器名称，默认 "default-scheduler"
        type: string
    type: object
  model.Scope:
    properties:
      scope_id:
        type: string
      scope_type:
        type: string
    type: object
  model.Session:
    properties:
      ambr:
        $ref: '#/definitions/model.AMBR'
      name:
        type: string
      pcc_rule:
        items:
          $ref: '#/definitions/model.PCCRule'
        type: array
      qos:
        $ref: '#/definitions/model.QoS'
      type:
        type: integer
    type: object
  model.Slice:
    properties:
      default_indicator:
        type: boolean
      id:
        type: string
      sd:
        type: string
      session:
        items:
          $ref: '#/definitions/model.Session'
        type: array
      sst:
        type: integer
    type: object
  model.SliceAndAddress:
    properties:
      default_indicator:
        type: boolean
      id:
        type: string
      sd:
        type: string
      session:
        items:
          $ref: '#/definitions/model.Session'
        type: array
      sessionSubnets:
        description: Subnet是子网
        items:
          type: string
        type: array
      smfn3Addr:
        type: string
      smfn4Addr:
        type: string
      sst:
        type: integer
      upfn3Addr:
        description: Addr是地址
        type: string
      upfn4Addr:
        type: string
    type: object
  model.SubCounter:
    properties:
      sub_counter_ids:
        items:
          type: string
        type: array
      sub_counter_type:
        type: string
    type: object
  model.SupportedKpi:
    properties:
      kpi_description:
        type: string
      kpi_name:
        type: string
      kpi_unit:
        type: string
    type: object
host: localhost:30001
info:
  contact: {}
  description: |-
    Slicer API
    基于Kubernetes资源的切片管理系统API
    包括 切片管理 监控管理 性能保证 等功能
  title: Slicer API
  version: "1.0"
paths:
  /monitor:
    get:
      consumes:
      - application/json
      description: 获取系统中存在的所有监控配置列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            items:
              $ref: '#/definitions/model.Monitor'
            type: array
        "500":
          description: 获取数据失败
          schema:
            type: string
      summary: 获取所有监控配置
      tags:
      - Monitor
    post:
      consumes:
      - application/json
      description: 创建监控请求并部署到Kubernetes集群，包含MDE和KPI组件
      parameters:
      - description: 监控配置对象
        in: body
        name: monitor
        required: true
        schema:
          $ref: '#/definitions/model.Monitor'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功返回监控对象
          schema:
            $ref: '#/definitions/model.Monitor'
        "400":
          description: 请求解码失败/参数验证失败/Slice不存在
          schema:
            type: string
        "404":
          description: 关联Slice不存在
          schema:
            type: string
        "500":
          description: 渲染YAML失败/部署失败/存储失败
          schema:
            type: string
      summary: 创建监控资源（内置部署）
      tags:
      - Monitor
  /monitor/external:
    post:
      consumes:
      - application/json
      description: 通过Monarch外部服务提交监控请求
      parameters:
      - description: 监控配置对象
        in: body
        name: monitor
        required: true
        schema:
          $ref: '#/definitions/model.Monitor'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功返回监控对象
          schema:
            $ref: '#/definitions/model.Monitor'
        "400":
          description: 请求解码失败/参数验证失败/Slice不存在
          schema:
            type: string
        "500":
          description: 提交外部请求失败/存储失败
          schema:
            type: string
      summary: 创建监控资源（外部服务）
      tags:
      - Monitor
  /monitor/external/{monitorId}:
    delete:
      consumes:
      - application/json
      description: 通过Monarch外部服务删除监控请求
      parameters:
      - description: 监控记录ID
        in: path
        name: monitorId
        required: true
        type: string
      - description: 外部服务请求ID
        in: query
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 资源删除成功
        "400":
          description: 缺少监控ID或请求ID
          schema:
            type: string
        "404":
          description: 监控记录不存在
          schema:
            type: string
        "500":
          description: 外部服务删除失败/存储删除失败
          schema:
            type: string
      summary: 删除监控资源（外部服务）
      tags:
      - Monitor
  /monitor/slice/{monitorId}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除监控资源并清理Kubernetes组件
      parameters:
      - description: 监控记录ID
        in: path
        name: monitorId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 资源删除成功
        "400":
          description: 缺少监控ID参数
          schema:
            type: string
        "404":
          description: 监控记录不存在
          schema:
            type: string
        "500":
          description: YAML渲染失败/组件删除失败/存储删除失败
          schema:
            type: string
      summary: 删除监控资源（内置部署）
      tags:
      - Monitor
    get:
      consumes:
      - application/json
      description: 根据监控ID获取详细配置信息
      parameters:
      - description: 监控记录ID
        in: path
        name: monitorId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/model.Monitor'
        "400":
          description: 缺少监控ID参数
          schema:
            type: string
        "404":
          description: 监控记录不存在
          schema:
            type: string
        "500":
          description: 获取数据失败
          schema:
            type: string
      summary: 获取单个监控配置
      tags:
      - Monitor
  /monitor/supported_kpis:
    get:
      consumes:
      - application/json
      description: 返回系统支持的所有KPI指标定义
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取KPI列表
          schema:
            items:
              $ref: '#/definitions/model.SupportedKpi'
            type: array
        "500":
          description: 服务器内部错误（获取失败）
          schema:
            type: string
      summary: 获取支持监控的KPI列表
      tags:
      - Monitor
  /play:
    post:
      consumes:
      - application/json
      description: 接收Play对象并创建新资源，同时部署到Kubernetes集群
      parameters:
      - description: Play对象
        in: body
        name: play
        required: true
        schema:
          $ref: '#/definitions/model.Play'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功返回Play对象
          schema:
            $ref: '#/definitions/model.Play'
        "400":
          description: 请求解码失败/参数非法/Slice不存在/Play已存在
          schema:
            type: string
        "404":
          description: 关联Slice不存在
          schema:
            type: string
        "500":
          description: 存储失败/部署失败/响应编码失败
          schema:
            type: string
      summary: 创建Play资源
      tags:
      - Play
  /play/{playId}:
    get:
      consumes:
      - application/json
      description: 根据Play ID获取资源详情
      parameters:
      - description: Play ID
        in: path
        name: playId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/model.Play'
        "400":
          description: 缺少Play ID
          schema:
            type: string
        "404":
          description: Play不存在
          schema:
            type: string
        "500":
          description: 获取失败/响应编码失败
          schema:
            type: string
      summary: 获取单个Play
      tags:
      - Play
    put:
      consumes:
      - application/json
      description: 根据Play ID更新资源并重新部署
      parameters:
      - description: Play ID
        in: path
        name: playId
        required: true
        type: string
      - description: 更新后的Play对象
        in: body
        name: play
        required: true
        schema:
          $ref: '#/definitions/model.Play'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功返回对象
          schema:
            $ref: '#/definitions/model.Play'
        "400":
          description: 缺少Play ID/请求解码失败/参数非法
          schema:
            type: string
        "404":
          description: Play不存在
          schema:
            type: string
        "500":
          description: 更新失败/部署失败/响应编码失败
          schema:
            type: string
      summary: 更新Play资源
      tags:
      - Play
  /sla:
    get:
      consumes:
      - application/json
      description: 获取系统内全部SLA列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            items:
              $ref: '#/definitions/model.SLA'
            type: array
        "500":
          description: 获取失败/响应编码失败
          schema:
            type: string
      summary: 获取所有SLA
      tags:
      - SLA
    post:
      consumes:
      - application/json
      description: |-
        接收SLA对象并创建新资源
        slice id对应切片必须存在
      parameters:
      - description: SLA对象
        in: body
        name: sla
        required: true
        schema:
          $ref: '#/definitions/model.SLA'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功返回SLA对象
          schema:
            $ref: '#/definitions/model.SLA'
        "400":
          description: 请求解码失败/SLA已存在/参数非法
          schema:
            type: string
        "404":
          description: 切片不存在
          schema:
            type: string
        "500":
          description: 存储失败/响应编码失败等服务器内部错误
          schema:
            type: string
      summary: 创建SLA
      tags:
      - SLA
  /sla/{slaId}:
    delete:
      consumes:
      - application/json
      description: 根据SLA ID删除资源
      parameters:
      - description: SLA ID
        in: path
        name: slaId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            type: string
        "400":
          description: 缺少SLA ID
          schema:
            type: string
        "404":
          description: SLA不存在
          schema:
            type: string
        "500":
          description: 删除失败
          schema:
            type: string
      summary: 删除SLA
      tags:
      - SLA
    get:
      consumes:
      - application/json
      description: 根据SLA ID获取资源详情
      parameters:
      - description: SLA ID
        in: path
        name: slaId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/model.SLA'
        "400":
          description: 缺少SLA ID
          schema:
            type: string
        "404":
          description: SLA不存在
          schema:
            type: string
        "500":
          description: 获取失败/响应编码失败
          schema:
            type: string
      summary: 获取单个SLA
      tags:
      - SLA
    put:
      consumes:
      - application/json
      description: 根据SLA ID更新资源
      parameters:
      - description: SLA ID
        in: path
        name: slaId
        required: true
        type: string
      - description: 更新后的SLA对象
        in: body
        name: sla
        required: true
        schema:
          $ref: '#/definitions/model.SLA'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功返回对象
          schema:
            $ref: '#/definitions/model.SLA'
        "400":
          description: 缺少SLA ID/请求解码失败/参数非法
          schema:
            type: string
        "404":
          description: SLA不存在
          schema:
            type: string
        "500":
          description: 更新失败/响应编码失败
          schema:
            type: string
      summary: 更新SLA
      tags:
      - SLA
  /slice:
    get:
      consumes:
      - application/json
      description: 获取当前系统中的所有切片列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回切片列表
          schema:
            items:
              $ref: '#/definitions/model.SliceAndAddress'
            type: array
        "500":
          description: 服务器内部错误（获取列表失败、响应编码失败）
          schema:
            type: string
      summary: 获取所有切片
      tags:
      - Slice
    post:
      consumes:
      - application/json
      description: 接受一个切片对象，创建一个新的切片，并返回创建的切片对象
      parameters:
      - description: 切片对象
        in: body
        name: slice
        required: true
        schema:
          $ref: '#/definitions/model.Slice'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功，返回切片及其地址
          schema:
            $ref: '#/definitions/model.SliceAndAddress'
        "400":
          description: 请求格式错误或参数非法
          schema:
            type: string
        "409":
          description: 切片已存在
          schema:
            type: string
        "500":
          description: 服务器内部错误，如分配IP或部署资源失败
          schema:
            type: string
      summary: 创建切片
      tags:
      - Slice
  /slice/{sliceId}:
    delete:
      consumes:
      - application/json
      description: 根据切片ID删除指定的切片资源
      parameters:
      - description: 切片ID
        in: path
        name: sliceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 删除成功无内容
        "400":
          description: 缺少sliceId参数
          schema:
            type: string
        "404":
          description: 切片不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误（获取/渲染/删除k8s资源失败、释放IP失败、存储删除失败）
          schema:
            type: string
      summary: 删除切片
      tags:
      - Slice
    get:
      consumes:
      - application/json
      description: 根据切片ID获取指定切片的详细信息
      parameters:
      - description: 切片ID
        in: path
        name: sliceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/model.SliceAndAddress'
        "400":
          description: 缺少sliceId参数
          schema:
            type: string
        "404":
          description: 切片不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误（获取失败、响应编码失败）
          schema:
            type: string
      summary: 获取单个切片
      tags:
      - Slice
swagger: "2.0"
