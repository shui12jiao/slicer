basePath: /
definitions:
  model.AMBR:
    properties:
      downlink:
        $ref: '#/definitions/model.BitRate'
      uplink:
        $ref: '#/definitions/model.BitRate'
    type: object
  model.ARP:
    properties:
      pre_emption_capability:
        type: integer
      pre_emption_vulnerability:
        type: integer
      priority_level:
        type: integer
    type: object
  model.BitRate:
    properties:
      unit:
        type: integer
      value:
        type: integer
    type: object
  model.Flow:
    properties:
      description:
        type: string
      direction:
        type: integer
    type: object
  model.GBR:
    properties:
      downlink:
        $ref: '#/definitions/model.BitRate'
      uplink:
        $ref: '#/definitions/model.BitRate'
    type: object
  model.MBR:
    properties:
      downlink:
        $ref: '#/definitions/model.BitRate'
      uplink:
        $ref: '#/definitions/model.BitRate'
    type: object
  model.PCCRule:
    properties:
      flow:
        items:
          $ref: '#/definitions/model.Flow'
        type: array
      qos:
        $ref: '#/definitions/model.QoS'
    type: object
  model.QoS:
    properties:
      arp:
        $ref: '#/definitions/model.ARP'
      gbr:
        $ref: '#/definitions/model.GBR'
      index:
        type: integer
      mbr:
        $ref: '#/definitions/model.MBR'
    type: object
  model.Session:
    properties:
      ambr:
        $ref: '#/definitions/model.AMBR'
      name:
        type: string
      pcc_rule:
        items:
          $ref: '#/definitions/model.PCCRule'
        type: array
      qos:
        $ref: '#/definitions/model.QoS'
      type:
        type: integer
    type: object
  model.Slice:
    properties:
      default_indicator:
        type: boolean
      id:
        type: string
      sd:
        type: string
      session:
        items:
          $ref: '#/definitions/model.Session'
        type: array
      sst:
        type: integer
    type: object
  model.SliceAndAddress:
    properties:
      default_indicator:
        type: boolean
      id:
        type: string
      sd:
        type: string
      session:
        items:
          $ref: '#/definitions/model.Session'
        type: array
      sessionSubnets:
        description: Subnet是子网
        items:
          type: string
        type: array
      smfn3Addr:
        type: string
      smfn4Addr:
        type: string
      sst:
        type: integer
      upfn3Addr:
        description: Addr是地址
        type: string
      upfn4Addr:
        type: string
    type: object
host: localhost:30001
info:
  contact: {}
  description: |-
    Slicer API
    基于Kubernetes资源的切片管理系统API
    包括 切片管理 监控管理 性能保证 等功能
  title: Slicer API
  version: "1.0"
paths:
  /slice:
    get:
      consumes:
      - application/json
      description: 获取当前系统中的所有切片列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功，返回切片列表
          schema:
            items:
              $ref: '#/definitions/model.SliceAndAddress'
            type: array
        "500":
          description: 服务器内部错误（获取列表失败、响应编码失败）
          schema:
            type: string
      summary: 获取所有切片
      tags:
      - slice
    post:
      consumes:
      - application/json
      description: 接受一个切片对象，创建一个新的切片，并返回创建的切片对象
      parameters:
      - description: 切片对象
        in: body
        name: slice
        required: true
        schema:
          $ref: '#/definitions/model.Slice'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功，返回切片及其地址
          schema:
            $ref: '#/definitions/model.SliceAndAddress'
        "400":
          description: 请求格式错误或参数非法
          schema:
            type: string
        "409":
          description: 切片已存在
          schema:
            type: string
        "500":
          description: 服务器内部错误，如分配IP或部署资源失败
          schema:
            type: string
      summary: 创建切片
      tags:
      - slice
  /slice/{sliceId}:
    delete:
      consumes:
      - application/json
      description: 根据切片ID删除指定的切片资源
      parameters:
      - description: 切片ID
        in: path
        name: sliceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 删除成功无内容
        "400":
          description: 缺少sliceId参数
          schema:
            type: string
        "404":
          description: 切片不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误（获取/渲染/删除k8s资源失败、释放IP失败、存储删除失败）
          schema:
            type: string
      summary: 删除切片
      tags:
      - slice
    get:
      consumes:
      - application/json
      description: 根据切片ID获取指定切片的详细信息
      parameters:
      - description: 切片ID
        in: path
        name: sliceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/model.SliceAndAddress'
        "400":
          description: 缺少sliceId参数
          schema:
            type: string
        "404":
          description: 切片不存在
          schema:
            type: string
        "500":
          description: 服务器内部错误（获取失败、响应编码失败）
          schema:
            type: string
      summary: 获取单个切片
      tags:
      - slice
swagger: "2.0"
